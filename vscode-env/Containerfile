FROM rockylinux:8.6

# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)
# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)
# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)

# Container features:
# - `cdodt` user installed with sudo
# - ssh service running
# - development software (git, python, terraform, node, go) preinstalled, with tools to install more
# - openvpn and net tools preinstalled
# - uses CAP_ADD sys_admin and /dev/fuse so fuse filesystems can be mounted


ARG USERNAME=cdodt
ARG USER_UID=1000
ARG USER_GID=$USER_UID
# ARG ROCKY_MIRROR=http://dl.rockylinux.org/pub/rocky/
ARG LABEL=vscode-env:xxx


# Building:
# LABEL=vscode-env:22; podman build --build-arg LABEL=$LABEL --tag $LABEL .

RUN --mount=type=cache,target=/var/cache/dnf \
    dnf -y install epel-release

# install dev tools
RUN --mount=type=cache,target=/var/cache/dnf \
    dnf -y install \
        diffutils \
        findutils \
        git \
        jq \
        lsof \
        lsyncd \
        man-db \
        net-tools \
        openssh \
        openssh-server \
        patch \
        podman \
        procps \
        rsync \
        sudo \
        unzip \
        vim \
        wget \
        zip

# github repo for the gh command line
RUN --mount=type=cache,target=/var/cache/dnf \
    dnf -y install 'dnf-command(config-manager)' && \
    dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo

# TODO: find an official ".repo" file for the google-cloud-sdk repo
RUN printf '\
[google-cloud-cli]\n\
name=Google Cloud CLI\n\
baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64\n\
enabled=1\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n\
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\n\
\n' >> /etc/yum.repos.d/google-cloud-sdk.repo

RUN --mount=type=cache,target=/var/cache/dnf \
    dnf -y install \
        awscli \
        google-cloud-cli \
        gcc \
        gh \
        make \
        npm \
        openvpn \
        postgresql \
        python39 \
        python39-devel \
        python39-pip \
    && update-alternatives --set python3 /usr/bin/python3.9

RUN echo "installing go" \
    && wget 'https://golang.org/dl/go1.18.linux-amd64.tar.gz' \
    && rm -rf /usr/local/go && tar -C /usr/local -xzf go1.18*.tar.gz \
    && rm -v go1.18*.tar.gz

# oops, this runs as root, running it as the shell user is complicated
# RUN echo "installing python module poetry" \
#     && curl -sSL https://install.python-poetry.org | python3 -

RUN echo "installing terraform" \
    && wget 'https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip' \
    && unzip -d /usr/local/bin/ terraform_*_linux_amd64.zip \
    && rm -v terraform_*_linux_amd64.zip

RUN echo "turning on network services ssh, openvpn" \
    && sudo systemctl enable sshd openvpn-client@.service

# global shell/terminal config
RUN printf '\
GOPATH=$HOME/go\n\
PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n'\
        >> /etc/profile.d/10-gopath.sh \
    && printf '\
set bell-style visible\n\
set keymap vi\n\
set editing-mode vi\n'\
        >> /etc/skel/.inputrc \
    && printf '\
if [[ -f ~/.ssh-agent.env ]]; then\n\
    { . ~/.ssh-agent.env; ssh-add -l || ssh-agent >~/.ssh-agent.env; } >/dev/null\n\
else\n\
    ssh-agent >~/.ssh-agent.env\n\
fi\n\
. ~/.ssh-agent.env >/dev/null\n'\
        >> /etc/profile.d/30-ssh-agent.sh

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME -s /bin/bash \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

ENTRYPOINT ["/sbin/init"]
