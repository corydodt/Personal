FROM ubuntu:20.04

# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)
# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)
# THIS IS MEANT TO BE INVOKED WITH PODMAN (better support for /sbin/init)

# Container features:
# - `cdodt` user installed with sudo
# - ssh service running
# - development software (python, terraform, go) preinstalled, with tools to install more
# - openvpn and net tools preinstalled


ARG USERNAME=cdodt
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG UBUNTU_MIRROR=http://mirrors.accretive-networks.net/ubuntu/

# tweak install environment for non-interactivity and speed
ENV DEBIAN_FRONTEND=noninteractive
RUN printf '\
deb '$UBUNTU_MIRROR' focal main restricted\n\
deb '$UBUNTU_MIRROR' focal-updates main restricted\n\
deb '$UBUNTU_MIRROR' focal universe\n\
deb '$UBUNTU_MIRROR' focal-updates universe\n\
deb '$UBUNTU_MIRROR' focal multiverse\n\
deb '$UBUNTU_MIRROR' focal-updates multiverse\n\
deb '$UBUNTU_MIRROR' focal-backports main restricted universe multiverse\n\
deb '$UBUNTU_MIRROR' focal-security main restricted\n\
deb '$UBUNTU_MIRROR' focal-security universe\n\
deb '$UBUNTU_MIRROR' focal-security multiverse\n'\
    > /etc/apt/sources.list

# install dev tools
RUN apt-get update \
    && apt-get install -y --no-install-recommends tzdata \
    && apt-get install -y \
        awscli \
        build-essential \
        curl \
        git \
        gosu \
        iputils-ping \
        jq \
        man-db \
        net-tools \
        openvpn \
        python3 \
        python3-pip \
        python3-venv \
        python3-virtualenvwrapper \
        rsync \
        software-properties-common \
        ssh \
        sudo \
        unzip \
        vim \
        wget \
        zip \
    && sudo systemctl enable ssh openvpn@client \
    && wget 'https://releases.hashicorp.com/terraform/1.0.8/terraform_1.0.8_linux_amd64.zip' \
    && unzip -d /usr/local/bin/ terraform_*_linux_amd64.zip \
    && rm -v terraform_*_linux_amd64.zip \
    && wget 'https://golang.org/dl/go1.17.3.linux-amd64.tar.gz' \
    && rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17*.tar.gz \
    && rm -v go1.17*.tar.gz
    ## TODO: install packer
    ## TODO: unminimize

# global shell/terminal config
RUN printf '\
GOPATH=$HOME/go\n\
PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n'\
        >> /etc/profile.d/10-gopath.sh \
    && printf '\
. /usr/share/virtualenvwrapper/virtualenvwrapper.sh\n'\
        >> /etc/profile.d/20-virtualenvwrapper.sh \
    && printf '\
set bell-style visible\n\
set keymap vi\n\
set editing-mode vi\n'\
        >> /etc/skel/.inputrc \
    && printf '\
if [[ -f ~/.ssh-agent.env ]]; then\n\
    { . ~/.ssh-agent.env; ssh-add -l || ssh-agent >~/.ssh-agent.env; } >/dev/null\n\
else\n\
    ssh-agent >~/.ssh-agent.env\n\
fi\n\
. ~/.ssh-agent.env >/dev/null\n'\
        >> /etc/profile.d/30-ssh-agent.sh

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME -s /bin/bash \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && usermod -a -G docker $USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

ENTRYPOINT ["/sbin/init"]

# powershell example
# ==================

# cd \\wsl$\Ubuntu-18.04\home\cory\src\Personal
# $user="cdodt"
#
# $buildtag="10"
# docker build -f Dockerfile.vscode-env `
#   --build-arg USERNAME=$user `
#   --tag localhost:5000/vscode-env:$buildtag .
#
# $name="aero-dev-$(get-date -format yyyyMMddHHmm)"
# docker run -d `
#    --name=$name `
#    --hostname=$name `
#    --mount "type=volume,src=cdodt,dst=/home/$user" `
#    --device /dev/net/tun `
#    --cap-add=NET_ADMIN `
#    --restart=unless-stopped `
#    -p 192.168.0.36:69422:22 `
#    -t `
#    vscode-env:$buildtag `
#      bash
