#!/bin/bash -x

set -e

export PATH=$PATH:/home/cdodt/bin

args="-Cav -F --inplace --delete"
rsync="rsync $args"
remoteDir=backups/`hostname -s`
dest="corydodt.strongspace.com:/strongspace/corydodt/home/$remoteDir/"

failAddress="corydodt+hello@gmail.com"

echo Backing up `hostname` on `date -I`

failmail() {
    message="$1"
    echo "$message" | mail -s `hostname -s`" backup failed; reason shown below" "$failAddress"
}

cd ~cdodt

toHGFiles='.gvimrc
.screenrc
.zshrc
.zsh
.hgrc
.sqliterc
/usr/local/bin/xvim
'

homeFiles='.compiz
.config
backgrounds
bin
cory.kdb
Desktop
.dput.cf
.gnupg
.gconf
.gnome2
.hgrc
.HotheadGames
.local
.maptool
.openoffice.org
packages.txt
.pdbrc
.purple
.pydistutils.cfg
.pypirc
.ssh
.mozilla
RecentDownloads
.Skype
.WorldOfGoo
'

rootFiles='/etc/modules
/etc/vim
/usr/local/bin/xvim
'

dpkg-origins > packages.txt || failmail "Could not run dpkg-origins"

$rsync $toHGFiles ~/wc/Personal/  # don't fail if this doesn't work

$rsync $toHGFiles $dest || failmail "Could not rsync toHGFiles"
$rsync $homeFiles $dest || failmail "Could not rsync homeFiles"
$rsync $rootFiles $dest || failmail "Could not rsync rootFiles"

# some stupid programs insist on removing all write permissions.  i guess this
# is a security feature for firefox extensions to prevent sploits in
# extensions mutating other extensions?  whatever, in my backup, it will be
# all writeable.  firefox seems to "fix" (by removing) the +w permission on
# loading anyway, so this won't cause any problems.
ssh goonmill.org 'chmod -R u+w '$remoteDir

