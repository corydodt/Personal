#!/bin/bash -x

set -e

echo Backing up `hostname` on `date -I`

# =============================
# command line flags I'm using:
# =============================
# -C --cvs-exclude (use .cvsignore files to determine what to ignore/skip)
# -a --archive (ALL of the following):
#    -r --recursive (descend subdirectories)
#    -l --links (copy symlinks as symlinks)
#    -p --permissions (copy permissions)
#    -g --group (copy group owner)
#    -o --owner (copy user owner)
#    -D --devices (copy devices intact)
#    -t --times (copy times)
# -v --verbose (show what's happening)
# --inplace  (copy files in place over old files, to reduce i/o)
# --delete (when a file in the destination is missing in the source, delete it
#           in the destination)


dayNumber() {
    echo $((`date +%s`/3600/24))
}

isEvenDay() {
    if [ $((`dayNumber`%2)) -eq 0 ];
    then return 0
    else return 1
    fi
}

if isEvenDay; then
    MOUNTPOINT=/mnt/s3backup2
else
    MOUNTPOINT=/mnt/s3backup1
fi


# returns true if $MOUNTPOINT is mounted correctly
isMounted() {
    ROOT_MOUNT=`mountpoint -d /`
    S3BACKUP_MOUNT=`mountpoint -d $MOUNTPOINT`
    if mountpoint -q $MOUNTPOINT; then
        if [ "$ROOT_MOUNT" != "$S3BACKUP_MOUNT" ]; then
            return 0
        fi
    fi
    return 1
}


ARGS="-Cav --inplace --delete --log-file=/var/log/backup-engraver.log"
## ARGS="-CrlpgoDv --size-only --inplace --delete --log-file=/var/log/backup-engraver.log"
RSYNC="rsync $ARGS"

# this sleep is absolutely necessary because mount is asynchronous and it takes
# a while for jungledisk to connect
if ! isMounted; then mount $MOUNTPOINT; sleep 60; fi

echo AFTER MOUNT: ....
mount


if ! isMounted; then
    echo "** Couldn't mount jungledisk; did it fail earlier and keep running?" 1>&2
    PIDS=`pgrep -f jungledisk`
    if [ -n "$PIDS" ]; then 
        echo "$PIDS" | xargs ps -o pid= -o args= -p | xargs -i printf '** %s\n' "{}" 1>&2
    fi
    exit 1
fi


touch /var/log/backup-engraver.log
chmod 600 /var/log/backup-engraver.log

$RSYNC /var $MOUNTPOINT/engraver.goonmill.org
$RSYNC /home $MOUNTPOINT/engraver.goonmill.org
$RSYNC /etc $MOUNTPOINT/engraver.goonmill.org
$RSYNC /usr/local $MOUNTPOINT/engraver.goonmill.org/usr
$RSYNC /usr/share/moin $MOUNTPOINT/engraver.goonmill.org/usr/share
sync

# don't keep $MOUNTPOINT mounted, less chance of disaster leaking into it
# (e.g. sudo rm -rf /* will happily erase backups too, if they are mounted)
# -z = lazy umount (will work even when resource is in use)
fusermount -z -u $MOUNTPOINT
echo "$MOUNTPOINT complete and disconnected"

# again, asynchronous, we wait to finish up
sleep 60

# still mounted? that's an error
if isMounted; then exit 1; fi
